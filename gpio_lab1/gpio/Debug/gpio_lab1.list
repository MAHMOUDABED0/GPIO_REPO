
gpio_lab1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000274  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a4  080003a4  0002001c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a4  080003a4  0002001c  2**0
                  CONTENTS
  4 .ARM          00000000  080003a4  080003a4  0002001c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a4  080003a4  0002001c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a4  080003a4  000103a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000001c  20000000  080003ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000001c  080003c8  0002001c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  080003c8  00020038  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002001c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000010db  00000000  00000000  00020045  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001f8  00000000  00000000  00021120  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000110  00000000  00000000  00021318  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000060  00000000  00000000  00021428  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000048  00000000  00000000  00021488  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00001cf6  00000000  00000000  000214d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000670  00000000  00000000  000231c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00008166  00000000  00000000  00023836  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0002b99c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000c0  00000000  00000000  0002ba18  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000001c 	.word	0x2000001c
 800014c:	00000000 	.word	0x00000000
 8000150:	0800038c 	.word	0x0800038c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000020 	.word	0x20000020
 800016c:	0800038c 	.word	0x0800038c

08000170 <GPIO_init>:
volatile GPIOx_CRH * GPIOB_CRH      = (volatile GPIOx_CRH *)(GPIOB_BASE +0x04);
volatile GPIOx_IDR * GPIOB_IDR      = (volatile GPIOx_IDR *)(GPIOB_BASE +0x08);
volatile GPIOx_ODR * GPIOB_ODR      = (volatile GPIOx_ODR *)(GPIOB_BASE +0x0C);


void GPIO_init(void){
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	GPIOA_CRL->bits.MODE1=0b00;
 8000174:	4b1e      	ldr	r3, [pc, #120]	; (80001f0 <GPIO_init+0x80>)
 8000176:	681a      	ldr	r2, [r3, #0]
 8000178:	6813      	ldr	r3, [r2, #0]
 800017a:	f36f 1305 	bfc	r3, #4, #2
 800017e:	6013      	str	r3, [r2, #0]
	GPIOA_CRL->bits.CNF1=0b01;
 8000180:	4b1b      	ldr	r3, [pc, #108]	; (80001f0 <GPIO_init+0x80>)
 8000182:	681a      	ldr	r2, [r3, #0]
 8000184:	6813      	ldr	r3, [r2, #0]
 8000186:	2101      	movs	r1, #1
 8000188:	f361 1387 	bfi	r3, r1, #6, #2
 800018c:	6013      	str	r3, [r2, #0]
	GPIOA_CRH->bits.MODE13=0b00;
 800018e:	4b19      	ldr	r3, [pc, #100]	; (80001f4 <GPIO_init+0x84>)
 8000190:	681a      	ldr	r2, [r3, #0]
 8000192:	6813      	ldr	r3, [r2, #0]
 8000194:	f36f 5315 	bfc	r3, #20, #2
 8000198:	6013      	str	r3, [r2, #0]
	GPIOA_CRH->bits.CNF13=0b01;
 800019a:	4b16      	ldr	r3, [pc, #88]	; (80001f4 <GPIO_init+0x84>)
 800019c:	681a      	ldr	r2, [r3, #0]
 800019e:	6813      	ldr	r3, [r2, #0]
 80001a0:	2101      	movs	r1, #1
 80001a2:	f361 5397 	bfi	r3, r1, #22, #2
 80001a6:	6013      	str	r3, [r2, #0]
	GPIOB_CRL->bits.MODE1=0b10;
 80001a8:	4b13      	ldr	r3, [pc, #76]	; (80001f8 <GPIO_init+0x88>)
 80001aa:	681a      	ldr	r2, [r3, #0]
 80001ac:	6813      	ldr	r3, [r2, #0]
 80001ae:	2102      	movs	r1, #2
 80001b0:	f361 1305 	bfi	r3, r1, #4, #2
 80001b4:	6013      	str	r3, [r2, #0]
	GPIOB_CRL->bits.CNF1=0b00;
 80001b6:	4b10      	ldr	r3, [pc, #64]	; (80001f8 <GPIO_init+0x88>)
 80001b8:	681a      	ldr	r2, [r3, #0]
 80001ba:	6813      	ldr	r3, [r2, #0]
 80001bc:	f36f 1387 	bfc	r3, #6, #2
 80001c0:	6013      	str	r3, [r2, #0]
	GPIOB_CRH->bits.MODE13=0b10;
 80001c2:	4b0e      	ldr	r3, [pc, #56]	; (80001fc <GPIO_init+0x8c>)
 80001c4:	681a      	ldr	r2, [r3, #0]
 80001c6:	6813      	ldr	r3, [r2, #0]
 80001c8:	2102      	movs	r1, #2
 80001ca:	f361 5315 	bfi	r3, r1, #20, #2
 80001ce:	6013      	str	r3, [r2, #0]
	GPIOB_CRH->bits.CNF13=0b00;
 80001d0:	4b0a      	ldr	r3, [pc, #40]	; (80001fc <GPIO_init+0x8c>)
 80001d2:	681a      	ldr	r2, [r3, #0]
 80001d4:	6813      	ldr	r3, [r2, #0]
 80001d6:	f36f 5397 	bfc	r3, #22, #2
 80001da:	6013      	str	r3, [r2, #0]
	GPIOB_ODR->ALL_FIELDS  = 0xFFFFFFFF;
 80001dc:	4b08      	ldr	r3, [pc, #32]	; (8000200 <GPIO_init+0x90>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	f04f 32ff 	mov.w	r2, #4294967295
 80001e4:	601a      	str	r2, [r3, #0]
}
 80001e6:	bf00      	nop
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	20000004 	.word	0x20000004
 80001f4:	20000008 	.word	0x20000008
 80001f8:	20000010 	.word	0x20000010
 80001fc:	20000014 	.word	0x20000014
 8000200:	20000018 	.word	0x20000018

08000204 <clock_init>:

void clock_init(void){
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	RCC_APB2ENR->bits.IOPAEN=0b1;
 8000208:	4b07      	ldr	r3, [pc, #28]	; (8000228 <clock_init+0x24>)
 800020a:	681a      	ldr	r2, [r3, #0]
 800020c:	8813      	ldrh	r3, [r2, #0]
 800020e:	f043 0304 	orr.w	r3, r3, #4
 8000212:	8013      	strh	r3, [r2, #0]
	RCC_APB2ENR->bits.IOPBEN=0b1;
 8000214:	4b04      	ldr	r3, [pc, #16]	; (8000228 <clock_init+0x24>)
 8000216:	681a      	ldr	r2, [r3, #0]
 8000218:	8813      	ldrh	r3, [r2, #0]
 800021a:	f043 0308 	orr.w	r3, r3, #8
 800021e:	8013      	strh	r3, [r2, #0]

}
 8000220:	bf00      	nop
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	20000000 	.word	0x20000000

0800022c <delay>:
void delay(int d){
 800022c:	b480      	push	{r7}
 800022e:	b085      	sub	sp, #20
 8000230:	af00      	add	r7, sp, #0
 8000232:	6078      	str	r0, [r7, #4]

	unsigned long i,j;
	for(i=0;i<d;i++)
 8000234:	2300      	movs	r3, #0
 8000236:	60fb      	str	r3, [r7, #12]
 8000238:	e00b      	b.n	8000252 <delay+0x26>
		for(j=0;j<255;j++);
 800023a:	2300      	movs	r3, #0
 800023c:	60bb      	str	r3, [r7, #8]
 800023e:	e002      	b.n	8000246 <delay+0x1a>
 8000240:	68bb      	ldr	r3, [r7, #8]
 8000242:	3301      	adds	r3, #1
 8000244:	60bb      	str	r3, [r7, #8]
 8000246:	68bb      	ldr	r3, [r7, #8]
 8000248:	2bfe      	cmp	r3, #254	; 0xfe
 800024a:	d9f9      	bls.n	8000240 <delay+0x14>
	for(i=0;i<d;i++)
 800024c:	68fb      	ldr	r3, [r7, #12]
 800024e:	3301      	adds	r3, #1
 8000250:	60fb      	str	r3, [r7, #12]
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	68fa      	ldr	r2, [r7, #12]
 8000256:	429a      	cmp	r2, r3
 8000258:	d3ef      	bcc.n	800023a <delay+0xe>
}
 800025a:	bf00      	nop
 800025c:	3714      	adds	r7, #20
 800025e:	46bd      	mov	sp, r7
 8000260:	bc80      	pop	{r7}
 8000262:	4770      	bx	lr

08000264 <main>:

int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	clock_init();
 8000268:	f7ff ffcc 	bl	8000204 <clock_init>
	GPIO_init();
 800026c:	f7ff ff80 	bl	8000170 <GPIO_init>

	while(1){

		if(GPIOA_IDR->bits.IDR1 == 0b0){
 8000270:	4b1d      	ldr	r3, [pc, #116]	; (80002e8 <main+0x84>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800027a:	b2db      	uxtb	r3, r3
 800027c:	2b00      	cmp	r3, #0
 800027e:	d117      	bne.n	80002b0 <main+0x4c>

			GPIOB_ODR->bits.ODR1 ^= 0b1;
 8000280:	4b1a      	ldr	r3, [pc, #104]	; (80002ec <main+0x88>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800028a:	b2db      	uxtb	r3, r3
 800028c:	4a17      	ldr	r2, [pc, #92]	; (80002ec <main+0x88>)
 800028e:	6812      	ldr	r2, [r2, #0]
 8000290:	f083 0301 	eor.w	r3, r3, #1
 8000294:	b2d9      	uxtb	r1, r3
 8000296:	8813      	ldrh	r3, [r2, #0]
 8000298:	f361 0341 	bfi	r3, r1, #1, #1
 800029c:	8013      	strh	r3, [r2, #0]
			while(GPIOA_IDR->bits.IDR1 == 0b0);
 800029e:	bf00      	nop
 80002a0:	4b11      	ldr	r3, [pc, #68]	; (80002e8 <main+0x84>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80002aa:	b2db      	uxtb	r3, r3
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d0f7      	beq.n	80002a0 <main+0x3c>
		}
		if(GPIOA_IDR->bits.IDR13 == 0b1){
 80002b0:	4b0d      	ldr	r3, [pc, #52]	; (80002e8 <main+0x84>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	f3c3 3340 	ubfx	r3, r3, #13, #1
 80002ba:	b2db      	uxtb	r3, r3
 80002bc:	2b01      	cmp	r3, #1
 80002be:	d1d7      	bne.n	8000270 <main+0xc>

			GPIOB_ODR->bits.ODR13 ^= 0b1;
 80002c0:	4b0a      	ldr	r3, [pc, #40]	; (80002ec <main+0x88>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	f3c3 3340 	ubfx	r3, r3, #13, #1
 80002ca:	b2db      	uxtb	r3, r3
 80002cc:	4a07      	ldr	r2, [pc, #28]	; (80002ec <main+0x88>)
 80002ce:	6812      	ldr	r2, [r2, #0]
 80002d0:	f083 0301 	eor.w	r3, r3, #1
 80002d4:	b2d9      	uxtb	r1, r3
 80002d6:	8813      	ldrh	r3, [r2, #0]
 80002d8:	f361 334d 	bfi	r3, r1, #13, #1
 80002dc:	8013      	strh	r3, [r2, #0]
			delay(1);
 80002de:	2001      	movs	r0, #1
 80002e0:	f7ff ffa4 	bl	800022c <delay>
		if(GPIOA_IDR->bits.IDR1 == 0b0){
 80002e4:	e7c4      	b.n	8000270 <main+0xc>
 80002e6:	bf00      	nop
 80002e8:	2000000c 	.word	0x2000000c
 80002ec:	20000018 	.word	0x20000018

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	; (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f8:	480c      	ldr	r0, [pc, #48]	; (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002fa:	490d      	ldr	r1, [pc, #52]	; (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002fc:	4a0d      	ldr	r2, [pc, #52]	; (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000300:	e002      	b.n	8000308 <LoopCopyDataInit>

08000302 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000302:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000304:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000306:	3304      	adds	r3, #4

08000308 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000308:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800030c:	d3f9      	bcc.n	8000302 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030e:	4a0a      	ldr	r2, [pc, #40]	; (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000310:	4c0a      	ldr	r4, [pc, #40]	; (800033c <LoopForever+0x16>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000314:	e001      	b.n	800031a <LoopFillZerobss>

08000316 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000316:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000318:	3204      	adds	r2, #4

0800031a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800031c:	d3fb      	bcc.n	8000316 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 f811 	bl	8000344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ff9f 	bl	8000264 <main>

08000326 <LoopForever>:

LoopForever:
    b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 8000334:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000338:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 800033c:	20000038 	.word	0x20000038

08000340 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC1_2_IRQHandler>
	...

08000344 <__libc_init_array>:
 8000344:	b570      	push	{r4, r5, r6, lr}
 8000346:	2500      	movs	r5, #0
 8000348:	4e0c      	ldr	r6, [pc, #48]	; (800037c <__libc_init_array+0x38>)
 800034a:	4c0d      	ldr	r4, [pc, #52]	; (8000380 <__libc_init_array+0x3c>)
 800034c:	1ba4      	subs	r4, r4, r6
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	42a5      	cmp	r5, r4
 8000352:	d109      	bne.n	8000368 <__libc_init_array+0x24>
 8000354:	f000 f81a 	bl	800038c <_init>
 8000358:	2500      	movs	r5, #0
 800035a:	4e0a      	ldr	r6, [pc, #40]	; (8000384 <__libc_init_array+0x40>)
 800035c:	4c0a      	ldr	r4, [pc, #40]	; (8000388 <__libc_init_array+0x44>)
 800035e:	1ba4      	subs	r4, r4, r6
 8000360:	10a4      	asrs	r4, r4, #2
 8000362:	42a5      	cmp	r5, r4
 8000364:	d105      	bne.n	8000372 <__libc_init_array+0x2e>
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800036c:	4798      	blx	r3
 800036e:	3501      	adds	r5, #1
 8000370:	e7ee      	b.n	8000350 <__libc_init_array+0xc>
 8000372:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000376:	4798      	blx	r3
 8000378:	3501      	adds	r5, #1
 800037a:	e7f2      	b.n	8000362 <__libc_init_array+0x1e>
 800037c:	080003a4 	.word	0x080003a4
 8000380:	080003a4 	.word	0x080003a4
 8000384:	080003a4 	.word	0x080003a4
 8000388:	080003a8 	.word	0x080003a8

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
